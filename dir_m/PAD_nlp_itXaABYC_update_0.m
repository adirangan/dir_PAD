function ...
[ ...
 parameter ...
,n_i ...
,n_t_i_ ...
,t_it__ ...
,n_x ...
,X_ixt____ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_ixt____ ...
,Y_ixt____ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
] = ...
PAD_nlp_itXaABYC_update_0( ...
 parameter ...
,n_i ...
,n_t_i_ ...
,t_it__ ...
,n_x ...
,X_ixt___ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_ixt___ ...
,Y_ixt___ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);

str_thisfunction = 'PAD_nlp_itXaABYC_update_0';

if (nargin<1);
disp(sprintf(' %% testing %s',str_thisfunction));
%%%%%%%%;
disp(sprintf(' %% not yet implemented'));
%%%%%%%%;
disp('returning'); return;
end;%if (nargin<1);

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_i=[]; end; na=na+1;
if (nargin<1+na); n_t_i_=[]; end; na=na+1;
if (nargin<1+na); t_it__=[]; end; na=na+1;
if (nargin<1+na); n_x=[]; end; na=na+1;
if (nargin<1+na); X_ixt____=[]; end; na=na+1;
if (nargin<1+na); n_a=[]; end; na=na+1;
if (nargin<1+na); a_xa__=[]; end; na=na+1;
if (nargin<1+na); A_xx__=[]; end; na=na+1;
if (nargin<1+na); B_omega=[]; end; na=na+1;
if (nargin<1+na); B_l0=[]; end; na=na+1;
if (nargin<1+na); B_l1=[]; end; na=na+1;
if (nargin<1+na); ignore_Y_ixt____=[]; end; na=na+1;
if (nargin<1+na); Y_ixt____=[]; end; na=na+1;
if (nargin<1+na); C_omega=[]; end; na=na+1;
if (nargin<1+na); C_l0=[]; end; na=na+1;
if (nargin<1+na); C_l1=[]; end; na=na+1;

if isempty(parameter); parameter = struct('type','parameter'); end;
if ~isfield(parameter,'tolerance_master'); parameter.tolerance_master = 1e-2; end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose = 0; end;
if ~isfield(parameter,'str_update'); parameter.str_update = 'CtCn_xx__'; end;
tolerance_master = parameter.tolerance_master;
flag_verbose = parameter.flag_verbose;
str_update = parameter.str_update;

if flag_verbose; disp(sprintf(' %% str_update: %s',str_update)); end;

%%%%%%%%;
n_dt_i_ = n_t_i_ - 1;
dt_idt__ = cell(n_i,1);
for ni=0:n_i-1;
t_t_ = t_i_{1+ni}; n_t = n_t_i_(1+ni);
n_dt_i_(1+ni) = n_t-1;
dt_dt_ = diff(t_t_(1:n_t));
dt_idt__{1+ni} = dt_dt_;
end;%for ni=0:n_i-1;
%%%%%%%%;

if strcmp(str_update,'CtCn_xx__');
%%%%%%%%;
n_t_all = sum(n_t_i_);
X_all_xt__ = zeros(n_x,n_t_all);
ignore_Y_all_xt__ = zeros(n_x,n_t_all);
Y_all_xt__ = zeros(n_x,n_t_all);
nt_sum=0;
for ni=0:n_i-1;
tmp_index_ = nt_sum+[0:n_t_i_(1+ni)-1];
X_all_xt__(:,1+tmp_index_) = X_ixt___{1+ni};
ignore_Y_all_xt__(:,1+tmp_index_) = ignore_Y_ixt___{1+ni};
Y_all_xt__(:,1+tmp_index_) = Y_ixt___{1+ni};
nt_sum=nt_sum + n_t_i_(1+ni);
end;%for ni=0:n_i-1;
assert(nt_sum==n_t_all);
f_nlp = @(w0l0l1_) PAD_nlp_tXYC_strip_1(n_x,n_t_all,X_all_xt__,ignore_Y_all_xt__,Y_all_xt__,w0l0l1_(1+0),w0l0l1_(1+1),w0l0l1_(1+2));
[w0l0l1_opt_,fval_opt] = fminsearch(f_nlp,[C_omega,C_l0,C_l1],optimset('MaxFunEvals',1024));
C_omega = w0l0l1_opt_(1+0); C_l0 = w0l0l1_opt_(1+1); C_l1 = w0l0l1_opt_(1+2);
if flag_verbose;
disp(sprintf(' %% C_omega %+0.2f C_l0 %+0.2f C_l1 %+0.2f',C_omega,C_l0,C_l1));
end;%if flag_verbose;
clear tmp_index_ X_all_xt__ ignore_Y_all_xt__ Y_all_xt__ f_nlp ;
%%%%%%%%;
end;%if strcmp(str_update,'CtCn_xx__');

if strcmp(str_update,'BtBn_xx__');
%%%%%%%%;
n_dt_all = sum(n_t_i_-1);
XY_all_xdt__ = zeros(n_x,n_t_all);
ndt=0;
for niid=0:n_iid-1;
[ ...
 nlp_dtXaAB ...
,BtBn_xx__ ...
,Q_xt__ ...
,P_xt__ ...
,dX_xdt__ ...
,dQ_xdt__ ...
,dP_xdt__ ...
,ZX_xdt__ ...
,ZQ_xdt__ ...
,ZP_xdt__ ...
] = ...
PAD_nlp_dtXaAB_strip_0( ...
 n_t_i_(1+niid) ...
,t_ia__{1+niid} ...
,n_x ...
,X_iva___{1+niid} ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
);
XY_all_xdt__(:,1+ndt+[0:n_t_i_(1+niid)-1-1]) = ZP_xdt__;
ndt=ndt + n_t_i_(1+niid)-1;
clear nlp_dtXaAB BtBn_xx__ Q_xt__ P_xt__ dX_xdt__ dQ_xdt__ dP_xdt__ ZX_xdt__ ZQ_xdt__ ZP_xdt__ ;
end;%for niid=0:n_iid-1;
assert(ndt==n_dt_all);
f_nlp = @(w0l0l1_) PAD_nlp_tXYC_strip_0(n_x,n_dt_all,XY_all_xdt__,w0l0l1_(1+0),w0l0l1_(1+1),w0l0l1_(1+2));
[w0l0l1_opt_,fval_opt] = fminsearch(f_nlp,[B_omega,B_l0,B_l1],optimset('MaxFunEvals',1024));
B_omega = w0l0l1_opt_(1+0); B_l0 = w0l0l1_opt_(1+1); B_l1 = w0l0l1_opt_(1+2);
if flag_verbose;
disp(sprintf(' %% B_omega %+0.2f B_l0 %+0.2f B_l1 %+0.2f',B_omega,B_l0,B_l1));
end;%if flag_verbose;
clear XY_all_xdt__ f_nlp ;
%%%%%%%%;
end;%if strcmp(str_update,'BtBn_xx__');

if strcmp(str_update,'a_xa_') | strcmp(str_update,'A_xx_');
%%%%%%%%;
% Note that we actually update a_xa__ and A_xx__ independently ;
% (each is updated assuming that the other is a constant). ;
% In future versions we should update these simultaneously. ;
%%%%%%%%;
nlp_dtXaAB_da_sum_xa__ = zeros(n_x,n_a);
nlp_dtXaAB_da_sum_xaxa____ = zeros(n_x,n_a,n_x,n_a);
nlp_dtXaAB_dA_sum_xx__ = zeros(n_x,n_x);
nlp_dtXaAB_dA_sum_xxxx____ = zeros(n_x,n_x,n_x,n_x);
for ni=0:n_i-1;
n_t = n_t_i_(1+ni);
t_t_ = t_it__{1+ni};
X_xt__ = X_ixt___{1+ni};
[ ...
 parameter ...
,nlp_dtXaAB ...
,BtBn_xx__ ...
,nlp_dtXaAB_0 ...
,nlp_dtXaAB_a ...
,nlp_dtXaAB_da_xa__ ...
,nlp_dtXaAB_da_xaxa____ ...
,nlp_dtXaAB_A ...
,nlp_dtXaAB_dA_xx__ ...
,nlp_dtXaAB_dA_xxxx____ ...
] = ...
PAD_nlp_dtXaAB_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
);
nlp_dtXaAB_da_sum_xa__ = nlp_dtXaAB_da_sum_xa__ + nlp_dtXaAB_da_xa__;
nlp_dtXaAB_da_sum_xaxa____ = nlp_dtXaAB_da_sum_xaxa____ + nlp_dtXaAB_da_xaxa____;
nlp_dtXaAB_dA_sum_xx__ = nlp_dtXaAB_dA_sum_xx__ + nlp_dtXaAB_dA_xx__;
nlp_dtXaAB_dA_sum_xxxx____ = nlp_dtXaAB_dA_sum_xxxx____ + nlp_dtXaAB_dA_xxxx____;
clear n_t t_t_ X_xt_ nlp_dtXaAB BtBn_xx__ nlp_dtXaAB_0 nlp_dtXaAB_a nlp_dtXaAB_da_xa__ nlp_dtXaAB_da_xaxa____ nlp_dtXaAB_A nlp_dtXaAB_dA_xx__ nlp_dtXaAB_dA_xxxx____ ;
end;%for ni=0:n_i-1;
a_opt_xa__ = reshape( - pinv(reshape(nlp_dtXaAB_sum_da_xaxa____,[n_x*n_a,n_x*n_a]),tolerance_master) * reshape(nlp_dtXaAB_sum_da_xa__,[n_x*n_a,1]) , [n_x,n_a] );
A_opt_xx__ = reshape( - pinv(reshape(nlp_dtXaAB_sum_dA_xxxx____,[n_x^2,n_x^2]),tolerance_master) * reshape(nlp_dtXaAB_sum_dA_xx__,[n_x^2,1]) , [n_x,n_x] );
a_xa__ = a_opt_xa__;
A_xx__ = A_opt_xx__;
clear nlp_dtXaAB_da_sum_xa__ nlp_dtXaAB_da_sum_xaxa____ nlp_dtXaAB_dA_sum_xx__ nlp_dtXaAB_dA_sum_xxxx____ ;
%%%%%%%%;
end;%if strcmp(str_update,'a_xa_') | strcmp(str_update,'A_xx_');

if strcmp(str_update,'X_xt__');
%%%%%%%%;
nlp_tXaABYC_dX_sum_xt__ = zeros(n_x,n_t);
nlp_tXaABYC_dX_sum_xtxt__ = zeros(n_x*nt,n_x*nt);
for ni=0:n_i-1;
n_t = n_t_i_(1+ni);
t_t_ = t_it__{1+ni};
X_xt__ = X_ixt___{1+ni};
ignore_Y_xt__ = ignore_Y_ixt___{1+ni};
Y_xt__ = Y_ixt___{1+ni};
[ ...
 parameter ...
,nlp_tXaABYC ...
,nlp_dtXaAB ...
,nlp_tXYC ...
,nlp_dtXaAB_dX_xt__ ...
,nlp_dtXaAB_dX_xtxt__ ...
,nlp_tXYC_dX_xt__ ...
,nlp_tXYC_dX_xtxt__ ...
] = ...
PAD_nlp_tXaABYC_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);
nlp_tXaABYC_dX_sum_xt__ = nlp_tXaABYC_dX_sum_xt__ + nlp_dtXaAB_dX_xt__ + nlp_tXYC_dX_xt__;
nlp_tXaABYC_dX_sum_xtxt__ = nlp_tXaABYC_dX_sum_xtxt__ + nlp_tXaAB_dX_xtxt__ + nlp_tXYC_dX_xtxt__;
clear n_t t_t_ X_xt__ ignore_Y_xt__ Y_xt__;
clear nlp_tXaABYC nlp_dtXaAB nlp_tXYC nlp_dtXaAB_dX_xt__ nlp_dtXaAB_dX_xtxt__ nlp_tXYC_dX_xt__ nlp_tXYC_dX_xtxt__ ;
end;%for ni=0:n_i-1;
tmp_RHS_xt_ = reshape(nlp_tXaABYC_dX_xt__,[n_x*n_t,1]);
tmp_LHS_xtxt__ = nlp_tXaABYC_dX_xtxt__;
X_opt_xt__ = -reshape(tmp_LHS_xtxt__\tmp_RHS_xt_,[n_x,n_t]);
X_xt__ = X_opt_xt__;
clear nlp_tXaABYC_dX_sum_xt__ nlp_tXaABYC_dX_sum_xtxt__ ;
%%%%%%%%;
end;%if strcmp(str_update,'X_xt__');







