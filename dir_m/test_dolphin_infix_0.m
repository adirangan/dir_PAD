function ...
str_infix ...
= ...
test_dolphin_infix_0( ...
 dt_avg ...
,n_i ...
,n_j_factor ...
,ignore_factor ...
,T_ini ...
,T_max ...
,B_log_amplitude ...
,C_log_amplitude ...
,X_log_amplitude ...
,n_iteration_BtBn ...
,MaxFunEvals_use_BtBn ...
,MaxFunEvals_use_simultaneous ...
,flag_regularize_eccentricity_simultaneous ...
,rseed ...
);

na=0;
if (nargin<1+na); dt_avg=[]; end; na=na+1;
if (nargin<1+na); n_i=[]; end; na=na+1;
if (nargin<1+na); n_j_factor=[]; end; na=na+1;
if (nargin<1+na); ignore_factor=[]; end; na=na+1;
if (nargin<1+na); T_ini=[]; end; na=na+1;
if (nargin<1+na); T_max=[]; end; na=na+1;
if (nargin<1+na); B_log_amplitude=[]; end; na=na+1;
if (nargin<1+na); C_log_amplitude=[]; end; na=na+1;
if (nargin<1+na); X_log_amplitude=[]; end; na=na+1;
if (nargin<1+na); n_iteration_BtBn=[]; end; na=na+1;
if (nargin<1+na); MaxFunEvals_use_BtBn=[]; end; na=na+1;
if (nargin<1+na); MaxFunEvals_use_simultaneous=[]; end; na=na+1;
if (nargin<1+na); flag_regularize_eccentricity_simultaneous=[]; end; na=na+1;
if (nargin<1+na); rseed=[]; end; na=na+1;

str_dt_avg = sprintf('dt%.4d',floor(1000*dt_avg));
str_n_i = sprintf('i%.3d',n_i);
str_n_j_factor = sprintf('j%.3d',floor(100*n_j_factor));
str_ignore_factor = sprintf('i%.3d',floor(100*ignore_factor));
str_T_max = sprintf('T%.3d',floor(10*T_max));
str_B_log_amplitude = sprintf('B%c%.1d','0' + (B_log_amplitude>0)*('p'-'0') + (B_log_amplitude<0)*('n'-'0'),round(abs(B_log_amplitude)));
str_C_log_amplitude = sprintf('C%c%.1d','0' + (C_log_amplitude>0)*('p'-'0') + (C_log_amplitude<0)*('n'-'0'),round(abs(C_log_amplitude)));
str_X_log_amplitude = sprintf('X%c%.1d','0' + (X_log_amplitude>0)*('p'-'0') + (X_log_amplitude<0)*('n'-'0'),round(abs(X_log_amplitude)));
str_n_iteration_BtBn = sprintf('n%.3d',n_iteration_BtBn);
str_MaxFunEvals_use_BtBn = sprintf('M%.3d',MaxFunEvals_use_BtBn);
str_MaxFunEvals_use_simultaneous = sprintf('M%.3d',MaxFunEvals_use_simultaneous);
str_flag_regularize_eccentricity_simultaneous = sprintf('e%d',flag_regularize_eccentricity_simultaneous);
if  isempty(rseed); str_rseed = ''; end;
if ~isempty(rseed); str_rseed = sprintf('r%d',rseed); end;
str_infix = sprintf('%s%s%s%s%s%s%s%s%s%s%s%s%s' ...
,str_dt_avg ...
,str_n_i ...
,str_n_j_factor ...
,str_ignore_factor ...
,str_T_max ...
,str_B_log_amplitude ...
,str_C_log_amplitude ...
,str_X_log_amplitude ...
,str_n_iteration_BtBn ...
,str_MaxFunEvals_use_BtBn ...
,str_MaxFunEvals_use_simultaneous ...
,str_flag_regularize_eccentricity_simultaneous ...
,str_rseed ...
);
