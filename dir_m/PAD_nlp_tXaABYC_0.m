function ...
[ ...
 parameter ...
,nlp ...
,nlp_dtXaAB ...
,nlp_tXYC ...
,nlp_dtXaAB_dX_xt__ ...
,nlp_dtXaAB_dX_xtxt__ ...
,nlp_tXYC_dX_xt__ ...
,nlp_tXYC_dX_xtxt__ ...
,BtBn_xx__ ...
,CtCn_xx__ ...
,Q_xt__ ...
,P_xt__ ...
,dX_xdt__ ...
,dQ_xdt__ ...
,dP_xdt__ ...
,ZX_xdt__ ...
,ZQ_xdt__ ...
,ZP_xdt__ ...
] = ...
PAD_nlp_tXaABYC_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
,Q_xt__ ...
,P_xt__ ...
,dX_xdt__ ...
,dQ_xdt__ ...
,dP_xdt__ ...
,ZX_xdt__ ...
,ZQ_xdt__ ...
,ZP_xdt__ ...
);

str_thisfunction = 'PAD_nlp_tXaABYC_0';

if (nargin<1);
disp(sprintf(' %% testing %s',str_thisfunction));
%%%%%%%%;
nf=0;
rng(0);
n_t = 8; t_t_ = sort(rand(n_t,1));
n_x = 2; X_xt__ = randn(n_x,n_t);
Y_xt__ = randn(n_x,n_t); ignore_Y_xt__ = rand(n_x,n_t)< 0.5;
n_a = 2; a_xa__ = 1*randn(n_x,n_a);
A_xx__ = 2*randn(n_x,n_x);
B_omega = pi/7 ; B_l0 = 1*randn(); B_l1 = 1*randn();
C_omega = pi/5 ; C_l0 = 1*randn(); C_l1 = 1*randn();
parameter = struct('type','parameter');
[ ...
 parameter ...
,nlp ...
,nlp_dtXaAB ...
,nlp_tXYC ...
,nlp_dtXaAB_dX_xt__ ...
,nlp_dtXaAB_dX_xtxt__ ...
,nlp_tXYC_dX_xt__ ...
,nlp_tXYC_dX_xtxt__ ...
,BtBn_xx__ ...
,CtCn_xx__ ...
,Q_xt__ ...
,P_xt__ ...
,dX_xdt__ ...
,dQ_xdt__ ...
,dP_xdt__ ...
,ZX_xdt__ ...
,ZQ_xdt__ ...
,ZP_xdt__ ...
] = ...
PAD_nlp_tXaABYC_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);
disp(sprintf(' %% nlp: %f',nlp));
disp(sprintf(' %% nlp_dtXaAB: %f',nlp_dtXaAB));
disp(sprintf(' %% nlp_tXYC: %f',nlp_tXYC));
%%%%;
tmp_eps = fnorm(X_xt__)*1e-4;
n_test = 16;
nlp_dtXaAB_dX_emp_l_ = zeros(n_test,1);
nlp_dtXaAB_dX_est_l_ = zeros(n_test,1);
nlp_tXYC_dX_emp_l_ = zeros(n_test,1);
nlp_tXYC_dX_est_l_ = zeros(n_test,1);
for ntest=0:n_test-1;
dX_xt__ = randn(n_x,n_t); dX_xt__ = dX_xt__/fnorm(dX_xt__);
tmp_X_xt__ = X_xt__ + tmp_eps*dX_xt__;
[ ...
 ~ ...
,nlp_pos ...
,nlp_dtXaAB_pos ...
,nlp_tXYC_pos ...
] = ...
PAD_nlp_tXaABYC_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,tmp_X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);
tmp_X_xt__ = X_xt__ - tmp_eps*dX_xt__;
[ ...
 ~ ...
,nlp_neg ...
,nlp_dtXaAB_neg ...
,nlp_tXYC_neg ...
] = ...
PAD_nlp_tXaABYC_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,tmp_X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);
nlp_dtXaAB_dX_emp_l_(1+ntest) = (nlp_dtXaAB_pos - nlp_dtXaAB_neg)/(2*tmp_eps);
nlp_dtXaAB_dX_est_l_(1+ntest) = + sum(nlp_dtXaAB_dX_xt__ .* dX_xt__,'all') + reshape(X_xt__,[1,n_x*n_t])*nlp_dtXaAB_dX_xtxt__*reshape(dX_xt__,[n_x*n_t,1]);
nlp_tXYC_dX_emp_l_(1+ntest) = (nlp_tXYC_pos - nlp_tXYC_neg)/(2*tmp_eps);
nlp_tXYC_dX_est_l_(1+ntest) = + sum(nlp_tXYC_dX_xt__ .* dX_xt__,'all') + reshape(X_xt__,[1,n_x*n_t])*nlp_tXYC_dX_xtxt__*reshape(dX_xt__,[n_x*n_t,1]);
end;%for ntest=0:n_test-1;
disp(sprintf(' %% nlp_dtXaAB_dX_emp_l_ vs nlp_dtXaAB_dX_est_l_: %0.16f',fnorm(nlp_dtXaAB_dX_emp_l_ - nlp_dtXaAB_dX_est_l_)/fnorm(nlp_dtXaAB_dX_emp_l_)));
disp(sprintf(' %% nlp_tXYC_dX_emp_l_ vs nlp_tXYC_dX_est_l_: %0.16f',fnorm(nlp_tXYC_dX_emp_l_ - nlp_tXYC_dX_est_l_)/fnorm(nlp_tXYC_dX_emp_l_)));
%%%%;
tmp_RHS_xt_ = reshape(nlp_dtXaAB_dX_xt__,[n_x*n_t,1]) + reshape(nlp_tXYC_dX_xt__,[n_x*n_t,1]) ;
tmp_LHS_xtxt__ = nlp_dtXaAB_dX_xtxt__ + nlp_tXYC_dX_xtxt__ ;
tolerance_master = 1e-6;
%X_opt_xt__ = -reshape(pinv(tmp_LHS_xtxt__,tolerance_master)*tmp_RHS_xt_,[n_x,n_t]);
X_opt_xt__ = -reshape(tmp_LHS_xtxt__\tmp_RHS_xt_,[n_x,n_t]);
tmp_eps = fnorm(X_opt_xt__)*1e-4;
n_test = 16;
scan_max = 0.1;
n_scan = 8+1; eps_s_ = scan_max*transpose(linspace(-1,+1,n_scan));
nlp_sl__ = zeros(n_scan,n_test);
for ntest=0:n_test-1;
dX_xt__ = randn(n_x,n_t); dX_xt__ = dX_xt__/fnorm(dX_xt__);
for nscan=0:n_scan-1;
tmp_eps = eps_s_(1+nscan);
tmp_X_xt__ = X_opt_xt__ + tmp_eps*fnorm(X_opt_xt__)*dX_xt__;
[ ...
 ~ ...
,nlp_sl__(1+nscan,1+ntest) ...
] = ...
PAD_nlp_tXaABYC_0( ...
 parameter ...
,n_t ...
,t_t_ ...
,n_x ...
,tmp_X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);
end;%for nscan=0:n_scan-1;
end;%for ntest=0:n_test-1;
%%%%;
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,3,1);
plot(nlp_dtXaAB_dX_emp_l_,nlp_dtXaAB_dX_est_l_,'ko');
xlabel('nlp_dtXaAB_dX_emp_l_','Interpreter','none');
ylabel('nlp_dtXaAB_dX_est_l_','Interpreter','none');
title('nlp_dtXaAB','Interpreter','none');
subplot(1,3,2);
plot(nlp_tXYC_dX_emp_l_,nlp_tXYC_dX_est_l_,'ko');
xlabel('nlp_tXYC_dX_emp_l_','Interpreter','none');
ylabel('nlp_tXYC_dX_est_l_','Interpreter','none');
title('nlp_tXYC','Interpreter','none');
subplot(1,3,3);
hold on;
plot(eps_s_,nlp_sl__,'ko');
plot(eps_s_(1+(n_scan-1)/2),nlp_sl__(1+(n_scan-1)/2,:),'ko','MarkerFaceColor','r');
hold off;
xlim(scan_max*[-1,+1]); xlabel('scan');
ylabel('nlp','Interpreter','none');
title('nlp','Interpreter','none');
%%%%;
%%%%%%%%;
disp('returning'); return;
end;%if (nargin<1);

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_t=[]; end; na=na+1;
if (nargin<1+na); t_t_=[]; end; na=na+1;
if (nargin<1+na); n_x=[]; end; na=na+1;
if (nargin<1+na); X_xt__=[]; end; na=na+1;
if (nargin<1+na); n_a=[]; end; na=na+1;
if (nargin<1+na); a_xa__=[]; end; na=na+1;
if (nargin<1+na); A_xx__=[]; end; na=na+1;
if (nargin<1+na); B_omega=[]; end; na=na+1;
if (nargin<1+na); B_l0=[]; end; na=na+1;
if (nargin<1+na); B_l1=[]; end; na=na+1;
if (nargin<1+na); ignore_Y_xt__=[]; end; na=na+1;
if (nargin<1+na); Y_xt__=[]; end; na=na+1;
if (nargin<1+na); C_omega=[]; end; na=na+1;
if (nargin<1+na); C_l0=[]; end; na=na+1;
if (nargin<1+na); C_l1=[]; end; na=na+1;
if (nargin<1+na); Q_xt__=[]; end; na=na+1;
if (nargin<1+na); P_xt__=[]; end; na=na+1;
if (nargin<1+na); dX_xdt__=[]; end; na=na+1;
if (nargin<1+na); dQ_xdt__=[]; end; na=na+1;
if (nargin<1+na); dP_xdt__=[]; end; na=na+1;
if (nargin<1+na); ZX_xdt__=[]; end; na=na+1;
if (nargin<1+na); ZQ_xdt__=[]; end; na=na+1;
if (nargin<1+na); ZP_xdt__=[]; end; na=na+1;

if isempty(parameter); parameter = struct('type','parameter'); end;
if ~isfield(parameter,'tolerance_master'); parameter.tolerance_master = 1e-2; end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose = 0; end;
tolerance_master = parameter.tolerance_master;
flag_verbose = parameter.flag_verbose;

%%%%;
[ ...
 nlp ...
,nlp_dtXaAB ...
,nlp_tXYC ...
,BtBn_xx__ ...
,CtCn_xx__ ...
,Q_xt__ ...
,P_xt__ ...
,dX_xdt__ ...
,dQ_xdt__ ...
,dP_xdt__ ...
,ZX_xdt__ ...
,ZQ_xdt__ ...
,ZP_xdt__ ...
] = ...
PAD_nlp_tXaABYC_strip_0( ...
 n_t ...
,t_t_ ...
,n_x ...
,X_xt__ ...
,n_a ...
,a_xa__ ...
,A_xx__ ...
,B_omega ...
,B_l0 ...
,B_l1 ...
,ignore_Y_xt__ ...
,Y_xt__ ...
,C_omega ...
,C_l0 ...
,C_l1 ...
,Q_xt__ ...
,P_xt__ ...
,dX_xdt__ ...
,dQ_xdt__ ...
,dP_xdt__ ...
,ZX_xdt__ ...
,ZQ_xdt__ ...
,ZP_xdt__ ...
);
%%%%;
[ ...
 ~ ...
,CtCn_xx__ ...
] = ...
PAD_BtBn_0( ...
 [] ...
,C_omega ...
,C_l0 ...
,C_l1 ...
);
[Z2_base_0,l2_stretch_0] = PAD_missing_2d_integral_helper_0(0,C_omega,C_l0,C_l1); %<-- ignore XY_(1+0) ;
[Z2_base_1,l2_stretch_1] = PAD_missing_2d_integral_helper_0(1,C_omega,C_l0,C_l1); %<-- ignore XY_(1+1) ;
%%%%;
if isempty(ignore_Y_xt__); ignore_Y_xt__ = ~isfinite(Y_xt__); end;%if isempty(ignore_Y_xt__); 
%%%%;
XY_xt__ = Y_xt__ - X_xt__;
%%%%%%%%;
% vectorize this later. ;
%%%%%%%%;
nlp_tXYC_dX_xt__ = sparse(n_x,n_t);
nlp_tXYC_dX_xtxt__ = sparse(n_x*n_t,n_x*n_t);
tmp_d = + 0.5*n_x*log(2*pi) - 0.5*(C_l0 + C_l1);
for nt=0:n_t-1;
X_x_ = X_xt__(:,1+nt);
Y_x_ = Y_xt__(:,1+nt);
XY_x_ = XY_xt__(:,1+nt);
ignore_Y_x_ = ignore_Y_xt__(:,1+nt);
if (sum(ignore_Y_x_)==0);
nlp_tXYC_dX_xt__(:,1+nt) = -CtCn_xx__*Y_x_;
nlp_tXYC_dX_xtxt__(1+0+nt*n_x,1+0+nt*n_x) = +CtCn_xx__(1+0,1+0);
nlp_tXYC_dX_xtxt__(1+0+nt*n_x,1+1+nt*n_x) = +CtCn_xx__(1+0,1+1);
nlp_tXYC_dX_xtxt__(1+1+nt*n_x,1+0+nt*n_x) = +CtCn_xx__(1+1,1+0);
nlp_tXYC_dX_xtxt__(1+1+nt*n_x,1+1+nt*n_x) = +CtCn_xx__(1+1,1+1);
else;
if (ignore_Y_x_(1+0)==0) & (ignore_Y_x_(1+1)==1) ; %<-- ignore XY_x_(1+1) ;
nlp_tXYC_dX_xt__(1+0,1+nt) = -Z2_base_1*Y_x_(1+0);
nlp_tXYC_dX_xtxt__(1+0+nt*n_x,1+0+nt*n_x) = +Z2_base_1;
end;%if (ignore_Y_x_(1+0)==0) & (ignore_Y_x_(1+1)==1) ;
if (ignore_Y_x_(1+0)==1) & (ignore_Y_x_(1+1)==0) ; %<-- ignore XY_x_(1+0) ;
nlp_tXYC_dX_xt__(1+1,1+nt) = -Z2_base_0*Y_x_(1+1);
nlp_tXYC_dX_xtxt__(1+1+nt*n_x,1+1+nt*n_x) = +Z2_base_0;
end;%if (ignore_Y_x_(1+0)==1) & (ignore_Y_x_(1+1)==0) ;
end;%else;
end;%for nt=0:n_t-1;
%%%%;

dt_dt_ = diff(t_t_); n_dt = numel(dt_dt_);
M_xx__ = BtBn_xx__;
L_xx__ = transpose(A_xx__)*BtBn_xx__;
R_xx__ = BtBn_xx__*A_xx__;
G_xx__ = transpose(A_xx__)*BtBn_xx__*A_xx__;
%%%%%%%%;
% vectorize this later. ;
%%%%%%%%;
nlp_dtXaAB_dX_bot_xt__ = sparse(n_x,n_t);
nlp_dtXaAB_dX_bot_xtxt__ = sparse(n_x*n_t,n_x*n_t);
nlp_dtXaAB_dX_top_xt__ = sparse(n_x,n_t);
nlp_dtXaAB_dX_top_xtxt__ = sparse(n_x*n_t,n_x*n_t);
for nt=0:n_t-1;
if (nt< n_t-1);
Q_pos_x_ = Q_xt__(:,1+nt+1);
Q_pre_x_ = Q_xt__(:,1+nt+0);
ndt = nt;
dQ_x_ = dQ_xdt__(:,1+ndt);
tmp_dt = max(1e-12,dt_dt_(1+ndt));
%nlp_dtXaAB_dX_bot_xt__(:,1+nt) = - M_xx__/tmp_dt * (-Q_pos_x_ + Q_pre_x_) - L_xx__*(-Q_pos_x_ + Q_pre_x_) + R_xx__*(-Q_pre_x_) + tmp_dt*G_xx__*(-Q_pre_x_) ;
nlp_dtXaAB_dX_bot_xt__(:,1+nt) = - M_xx__/tmp_dt * (-dQ_x_) - L_xx__*(-dQ_x_) + R_xx__*(-Q_pre_x_) + tmp_dt*G_xx__*(-Q_pre_x_) ;
nt_out = nt; nt_0in = nt_out + 1;
nlp_dtXaAB_dX_bot_xtxt__(1+0+nt_out*n_x,1+0+nt_0in*n_x) = - M_xx__(1+0,1+0)/tmp_dt - L_xx__(1+0,1+0) ;
nlp_dtXaAB_dX_bot_xtxt__(1+0+nt_out*n_x,1+1+nt_0in*n_x) = - M_xx__(1+0,1+1)/tmp_dt - L_xx__(1+0,1+1) ;
nlp_dtXaAB_dX_bot_xtxt__(1+1+nt_out*n_x,1+0+nt_0in*n_x) = - M_xx__(1+1,1+0)/tmp_dt - L_xx__(1+1,1+0) ;
nlp_dtXaAB_dX_bot_xtxt__(1+1+nt_out*n_x,1+1+nt_0in*n_x) = - M_xx__(1+1,1+1)/tmp_dt - L_xx__(1+1,1+1) ;
pnt_out = nt; nt_0in = nt_out + 0;
nlp_dtXaAB_dX_bot_xtxt__(1+0+nt_out*n_x,1+0+nt_0in*n_x) = + M_xx__(1+0,1+0)/tmp_dt + L_xx__(1+0,1+0) + R_xx__(1+0,1+0) + tmp_dt*G_xx__(1+0,1+0) ;
nlp_dtXaAB_dX_bot_xtxt__(1+0+nt_out*n_x,1+1+nt_0in*n_x) = + M_xx__(1+0,1+1)/tmp_dt + L_xx__(1+0,1+1) + R_xx__(1+0,1+1) + tmp_dt*G_xx__(1+0,1+1) ;
nlp_dtXaAB_dX_bot_xtxt__(1+1+nt_out*n_x,1+0+nt_0in*n_x) = + M_xx__(1+1,1+0)/tmp_dt + L_xx__(1+1,1+0) + R_xx__(1+1,1+0) + tmp_dt*G_xx__(1+1,1+0) ;
nlp_dtXaAB_dX_bot_xtxt__(1+1+nt_out*n_x,1+1+nt_0in*n_x) = + M_xx__(1+1,1+1)/tmp_dt + L_xx__(1+1,1+1) + R_xx__(1+1,1+1) + tmp_dt*G_xx__(1+1,1+1) ;
end;%if (nt< n_t-1);
if (nt> 0);
Q_pos_x_ = Q_xt__(:,1+nt+0);
Q_pre_x_ = Q_xt__(:,1+nt-1);
ndt = nt-1;
dQ_x_ = dQ_xdt__(:,1+ndt);
tmp_dt = max(1e-12,dt_dt_(1+ndt));
%nlp_dtXaAB_dX_top_xt__(:,1+nt) = + M_xx__/tmp_dt * (-Q_pos_x_ + Q_pre_x_) - R_xx__*(-Q_pre_x_) ;
nlp_dtXaAB_dX_top_xt__(:,1+nt) = + M_xx__/tmp_dt * (-dQ_x_) - R_xx__*(-Q_pre_x_) ;
nt_out = nt; nt_0in = nt_out - 1;
nlp_dtXaAB_dX_top_xtxt__(1+0+nt_out*n_x,1+0+nt_0in*n_x) = - M_xx__(1+0,1+0)/tmp_dt - R_xx__(1+0,1+0) ;
nlp_dtXaAB_dX_top_xtxt__(1+0+nt_out*n_x,1+1+nt_0in*n_x) = - M_xx__(1+0,1+1)/tmp_dt - R_xx__(1+0,1+1) ;
nlp_dtXaAB_dX_top_xtxt__(1+1+nt_out*n_x,1+0+nt_0in*n_x) = - M_xx__(1+1,1+0)/tmp_dt - R_xx__(1+1,1+0) ;
nlp_dtXaAB_dX_top_xtxt__(1+1+nt_out*n_x,1+1+nt_0in*n_x) = - M_xx__(1+1,1+1)/tmp_dt - R_xx__(1+1,1+1) ;
nt_out = nt; nt_0in = nt_out - 0;
nlp_dtXaAB_dX_top_xtxt__(1+0+nt_out*n_x,1+0+nt_0in*n_x) = + M_xx__(1+0,1+0)/tmp_dt ;
nlp_dtXaAB_dX_top_xtxt__(1+0+nt_out*n_x,1+1+nt_0in*n_x) = + M_xx__(1+0,1+1)/tmp_dt ;
nlp_dtXaAB_dX_top_xtxt__(1+1+nt_out*n_x,1+0+nt_0in*n_x) = + M_xx__(1+1,1+0)/tmp_dt ;
nlp_dtXaAB_dX_top_xtxt__(1+1+nt_out*n_x,1+1+nt_0in*n_x) = + M_xx__(1+1,1+1)/tmp_dt ;
end;%if (nt> 0);
end;%for nt=0:n_t-1;
nlp_dtXaAB_dX_xt__ = nlp_dtXaAB_dX_bot_xt__ + nlp_dtXaAB_dX_top_xt__;
nlp_dtXaAB_dX_xtxt__ = nlp_dtXaAB_dX_bot_xtxt__ + nlp_dtXaAB_dX_top_xtxt__;







